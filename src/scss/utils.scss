@use "sass:math";
@use "sass:list";
@use "sass:map";

@function px-to-rem($list) {
  $rem-list: ();

  @each $value in $list {
    $rem-value: math.div($value, $rem-base) * 1rem;
    $rem-value-rounded: math.div(math.round($rem-value * 1000), 1000);
    $rem-list: append($rem-list, $rem-value-rounded);
  }

  @return #{$rem-list};
}

@mixin set-typography(
  $font-size,
  $line-height: $font-size,
  $font-weight: 400,
  $text-transform: inherit
) {
  font-weight: $font-weight;
  font-size: px-to-rem($font-size);
  line-height: px-to-rem($line-height);
  text-transform: $text-transform;
}

@mixin set-media($type) {
  @media (max-width: map-get($breakpoints, $type)) {
    @content;
  }
}

@mixin set-bg-image($image-name, $extend) {
  background: url("../images/#{$image-name}.#{$extend}") no-repeat center;
  background-size: cover;
}

@mixin set-bg-gradient($color-1, $color-2) {
  background: linear-gradient(89.75deg, $color-1 32.83%, $color-2 81.56%);
}

@mixin set-card-bg {
  @each $class, $name in $subscriptions {
    .bg-#{$class} {
      @include set-bg-image($name, "png");

      // width: 374px;
      // max-width: 100%;
      // height: 100%;
    }
  }
}

@mixin set-box($x, $y, $item-size) {
  margin-bottom: px-to-rem(-$y);
  margin-left: px-to-rem(-$x);

  & > * {
    flex: 1 1 $item-size;
    margin-bottom: px-to-rem($y);
    margin-left: px-to-rem($x);
  }
}

@mixin set-icon($width, $height, $left, $bottom) {
  &::before {
    bottom: $bottom;
    left: px-to-rem($left);

    width: px-to-rem($width);
    height: px-to-rem($height);
  }
}

@mixin set-icon-images {
  @each $name in $icons {
    .icon-#{$name} {
      &::before {
        background-image: url("../images/#{$name}.svg");
      }
    }
  }
}
